name: CI/CD (Loan Prediction)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ${{ secrets.IMAGE_NAME }} # เช่น user/mlops-workshop1
      S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_EC2_METADATA_DISABLED: ${{ secrets.AWS_EC2_METADATA_DISABLED }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ----- เตรียม Python & DVC เพื่อดึงไฟล์โมเดลจาก MinIO -----
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install deps for DVC pull
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # ต้องมี s3/MinIO support
          pip install "dvc[s3]" boto3

      - name: Configure DVC endpoint (MinIO) & Pull artifacts
        run: |
          # ตั้งค่า endpoint ของ remote ชื่อ myremote ให้ชี้ MinIO
          dvc remote modify myremote endpointurl "${S3_ENDPOINT}"
          # ดึงไฟล์ที่ต้องใช้ตอนเสิร์ฟ
          dvc pull model/loan_model.pkl.dvc || true
          dvc pull model/scaler.pkl.dvc || true
          dvc pull model/model_columns.json.dvc || true
          dvc pull model/fill_values.json.dvc || true
          ls -lah model || true

      # ----- Build & Push Docker image -----
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        run: echo "${{ secrets.DOCKERHUB_PASS }}" | docker login -u "${{ secrets.DOCKERHUB_USER }}" --password-stdin

      - name: Build image (includes model artifacts)
        run: docker build -t "${IMAGE_NAME}:latest" .

      - name: Push image
        run: docker push "${IMAGE_NAME}:latest"

      # ----- Deploy ไป Linode -----
      - name: Deploy to Linode via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.LINODE_HOST }}
          username: ${{ secrets.LINODE_USER }}
          key: ${{ secrets.LINODE_SSH_KEY }}
          script: |
            docker pull "${{ secrets.IMAGE_NAME }}:latest"
            docker stop mlops-api || true
            docker rm mlops-api || true
            docker run -d --name mlops-api -p 8000:8000 "${{ secrets.IMAGE_NAME }}:latest"
